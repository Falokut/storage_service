basePath: /api/storage-service
definitions:
  apierrors.Error:
    properties:
      details:
        additionalProperties: {}
        type: object
      errorCode:
        type: integer
      errorMessage:
        type: string
    type: object
  domain.FileExistResponse:
    properties:
      fileExist:
        type: boolean
    type: object
  domain.UploadFileResponse:
    properties:
      filename:
        type: string
    type: object
info:
  contact: {}
  description: Сервис для заказа еды
  title: storage-service
  version: 1.0.0
paths:
  /file/{category}:
    post:
      consumes:
      - '*/*'
      description: Загрузить файл в хранилище
      parameters:
      - description: Категория файла
        in: path
        name: category
        required: true
        type: string
      - description: имя файла
        in: path
        name: filename
        type: string
      - description: пометить как pending
        in: query
        name: pending
        type: boolean
      - description: содержимое файла
        in: body
        name: body
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UploadFileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apierrors.Error'
      summary: Upload file
      tags:
      - file
  /file/{category}/{filename}:
    delete:
      consumes:
      - application/json
      description: Удалить файл из хранилища
      parameters:
      - description: Категория файла
        in: path
        name: category
        required: true
        type: string
      - description: Идентификатор файла
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apierrors.Error'
      summary: Delete file
      tags:
      - file
    get:
      description: Получить файл из хранилища
      parameters:
      - description: Категория файла
        in: path
        name: category
        required: true
        type: string
      - description: Идентификатор файла
        in: path
        name: filename
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              format: int32
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apierrors.Error'
      summary: Get file
      tags:
      - file
  /file/{category}/{filename}/commit:
    post:
      description: Подтвердить загрузку файла в хранилище
      parameters:
      - description: Категория файла
        in: path
        name: category
        required: true
        type: string
      - description: Идентификатор файла
        in: path
        name: filename
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              format: int32
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apierrors.Error'
      summary: Commit
      tags:
      - file
  /file/{category}/{filename}/exist:
    get:
      consumes:
      - application/json
      description: Проверить наличие файла в хранилище
      parameters:
      - description: Категория файла
        in: path
        name: category
        required: true
        type: string
      - description: Идентификатор файла
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.FileExistResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/apierrors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apierrors.Error'
      summary: Is file exist
      tags:
      - file
  /file/{category}/{filename}/rollback:
    post:
      description: Отменить загрузку файла в хранилище
      parameters:
      - description: Категория файла
        in: path
        name: category
        required: true
        type: string
      - description: Идентификатор файла
        in: path
        name: filename
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              format: int32
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apierrors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apierrors.Error'
      summary: Rollback file
      tags:
      - file
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
